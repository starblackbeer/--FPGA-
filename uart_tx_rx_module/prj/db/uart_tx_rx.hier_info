|uart_tx_rx_top
clk => clk.IN2
rst_n => rst_n.IN2
baud_set[0] => baud_set[0].IN2
baud_set[1] => baud_set[1].IN2
baud_set[2] => baud_set[2].IN2
send_en => send_en.IN1
data_byte_tx[0] => data_byte_tx[0].IN1
data_byte_tx[1] => data_byte_tx[1].IN1
data_byte_tx[2] => data_byte_tx[2].IN1
data_byte_tx[3] => data_byte_tx[3].IN1
data_byte_tx[4] => data_byte_tx[4].IN1
data_byte_tx[5] => data_byte_tx[5].IN1
data_byte_tx[6] => data_byte_tx[6].IN1
data_byte_tx[7] => data_byte_tx[7].IN1
rs232_rx => rs232_rx.IN1
rs232_tx <= uart_byte_tx:uart_byte_0.rs232_tx
data_byte_rx[0] <= uart_byte_rx:uart_rx.data_byte
data_byte_rx[1] <= uart_byte_rx:uart_rx.data_byte
data_byte_rx[2] <= uart_byte_rx:uart_rx.data_byte
data_byte_rx[3] <= uart_byte_rx:uart_rx.data_byte
data_byte_rx[4] <= uart_byte_rx:uart_rx.data_byte
data_byte_rx[5] <= uart_byte_rx:uart_rx.data_byte
data_byte_rx[6] <= uart_byte_rx:uart_rx.data_byte
data_byte_rx[7] <= uart_byte_rx:uart_rx.data_byte
rx_done <= uart_byte_rx:uart_rx.rx_done
tx_done <= uart_byte_tx:uart_byte_0.tx_done


|uart_tx_rx_top|uart_byte_rx:uart_rx
rs232_rx => s0_rs232_rx.DATAIN
baud_set[0] => Decoder0.IN2
baud_set[0] => Decoder1.IN1
baud_set[1] => Decoder0.IN1
baud_set[2] => Decoder0.IN0
baud_set[2] => Decoder1.IN0
clk => uart_state.CLK
clk => data_byte[0]~reg0.CLK
clk => data_byte[1]~reg0.CLK
clk => data_byte[2]~reg0.CLK
clk => data_byte[3]~reg0.CLK
clk => data_byte[4]~reg0.CLK
clk => data_byte[5]~reg0.CLK
clk => data_byte[6]~reg0.CLK
clk => data_byte[7]~reg0.CLK
clk => r_data_byte[0][0].CLK
clk => r_data_byte[0][1].CLK
clk => r_data_byte[0][2].CLK
clk => r_data_byte[1][0].CLK
clk => r_data_byte[1][1].CLK
clk => r_data_byte[1][2].CLK
clk => r_data_byte[2][0].CLK
clk => r_data_byte[2][1].CLK
clk => r_data_byte[2][2].CLK
clk => r_data_byte[3][0].CLK
clk => r_data_byte[3][1].CLK
clk => r_data_byte[3][2].CLK
clk => r_data_byte[4][0].CLK
clk => r_data_byte[4][1].CLK
clk => r_data_byte[4][2].CLK
clk => r_data_byte[5][0].CLK
clk => r_data_byte[5][1].CLK
clk => r_data_byte[5][2].CLK
clk => r_data_byte[6][0].CLK
clk => r_data_byte[6][1].CLK
clk => r_data_byte[6][2].CLK
clk => r_data_byte[7][0].CLK
clk => r_data_byte[7][1].CLK
clk => r_data_byte[7][2].CLK
clk => START_BIT[0].CLK
clk => START_BIT[1].CLK
clk => START_BIT[2].CLK
clk => START_BIT[3].CLK
clk => rx_done~reg0.CLK
clk => bps_cnt[0].CLK
clk => bps_cnt[1].CLK
clk => bps_cnt[2].CLK
clk => bps_cnt[3].CLK
clk => bps_cnt[4].CLK
clk => bps_cnt[5].CLK
clk => bps_cnt[6].CLK
clk => bps_cnt[7].CLK
clk => bps_clk.CLK
clk => div_cnt[0].CLK
clk => div_cnt[1].CLK
clk => div_cnt[2].CLK
clk => div_cnt[3].CLK
clk => div_cnt[4].CLK
clk => div_cnt[5].CLK
clk => div_cnt[6].CLK
clk => div_cnt[7].CLK
clk => div_cnt[8].CLK
clk => div_cnt[9].CLK
clk => div_cnt[10].CLK
clk => div_cnt[11].CLK
clk => div_cnt[12].CLK
clk => div_cnt[13].CLK
clk => div_cnt[14].CLK
clk => div_cnt[15].CLK
clk => bps_DR[0].CLK
clk => bps_DR[1].CLK
clk => bps_DR[2].CLK
clk => bps_DR[3].CLK
clk => bps_DR[4].CLK
clk => bps_DR[5].CLK
clk => bps_DR[6].CLK
clk => bps_DR[7].CLK
clk => bps_DR[8].CLK
clk => bps_DR[9].CLK
clk => bps_DR[10].CLK
clk => bps_DR[11].CLK
clk => bps_DR[12].CLK
clk => bps_DR[13].CLK
clk => bps_DR[14].CLK
clk => bps_DR[15].CLK
clk => tmp1_rs232_rx.CLK
clk => tmp0_rs232_rx.CLK
clk => s1_rs232_rx.CLK
clk => s0_rs232_rx.CLK
rst_n => bps_DR[0].ACLR
rst_n => bps_DR[1].ACLR
rst_n => bps_DR[2].PRESET
rst_n => bps_DR[3].ACLR
rst_n => bps_DR[4].ACLR
rst_n => bps_DR[5].ACLR
rst_n => bps_DR[6].PRESET
rst_n => bps_DR[7].ACLR
rst_n => bps_DR[8].PRESET
rst_n => bps_DR[9].ACLR
rst_n => bps_DR[10].ACLR
rst_n => bps_DR[11].ACLR
rst_n => bps_DR[12].ACLR
rst_n => bps_DR[13].ACLR
rst_n => bps_DR[14].ACLR
rst_n => bps_DR[15].ACLR
rst_n => data_byte[0]~reg0.ACLR
rst_n => data_byte[1]~reg0.ACLR
rst_n => data_byte[2]~reg0.ACLR
rst_n => data_byte[3]~reg0.ACLR
rst_n => data_byte[4]~reg0.ACLR
rst_n => data_byte[5]~reg0.ACLR
rst_n => data_byte[6]~reg0.ACLR
rst_n => data_byte[7]~reg0.ACLR
rst_n => rx_done~reg0.ACLR
rst_n => s1_rs232_rx.ACLR
rst_n => s0_rs232_rx.ACLR
rst_n => tmp0_rs232_rx.ACLR
rst_n => div_cnt[0].ACLR
rst_n => div_cnt[1].ACLR
rst_n => div_cnt[2].ACLR
rst_n => div_cnt[3].ACLR
rst_n => div_cnt[4].ACLR
rst_n => div_cnt[5].ACLR
rst_n => div_cnt[6].ACLR
rst_n => div_cnt[7].ACLR
rst_n => div_cnt[8].ACLR
rst_n => div_cnt[9].ACLR
rst_n => div_cnt[10].ACLR
rst_n => div_cnt[11].ACLR
rst_n => div_cnt[12].ACLR
rst_n => div_cnt[13].ACLR
rst_n => div_cnt[14].ACLR
rst_n => div_cnt[15].ACLR
rst_n => bps_clk.ACLR
rst_n => bps_cnt[0].ACLR
rst_n => bps_cnt[1].ACLR
rst_n => bps_cnt[2].ACLR
rst_n => bps_cnt[3].ACLR
rst_n => bps_cnt[4].ACLR
rst_n => bps_cnt[5].ACLR
rst_n => bps_cnt[6].ACLR
rst_n => bps_cnt[7].ACLR
rst_n => uart_state.ACLR
rst_n => r_data_byte[0][0].ACLR
rst_n => r_data_byte[0][1].ACLR
rst_n => r_data_byte[0][2].ACLR
rst_n => r_data_byte[1][0].ACLR
rst_n => r_data_byte[1][1].ACLR
rst_n => r_data_byte[1][2].ACLR
rst_n => r_data_byte[2][0].ACLR
rst_n => r_data_byte[2][1].ACLR
rst_n => r_data_byte[2][2].ACLR
rst_n => r_data_byte[3][0].ACLR
rst_n => r_data_byte[3][1].ACLR
rst_n => r_data_byte[3][2].ACLR
rst_n => r_data_byte[4][0].ACLR
rst_n => r_data_byte[4][1].ACLR
rst_n => r_data_byte[4][2].ACLR
rst_n => r_data_byte[5][0].ACLR
rst_n => r_data_byte[5][1].ACLR
rst_n => r_data_byte[5][2].ACLR
rst_n => r_data_byte[6][0].ACLR
rst_n => r_data_byte[6][1].ACLR
rst_n => r_data_byte[6][2].ACLR
rst_n => r_data_byte[7][0].ACLR
rst_n => r_data_byte[7][1].ACLR
rst_n => r_data_byte[7][2].ACLR
rst_n => START_BIT[0].ACLR
rst_n => START_BIT[1].ACLR
rst_n => START_BIT[2].ACLR
rst_n => START_BIT[3].ACLR
rst_n => tmp1_rs232_rx.ENA
data_byte[0] <= data_byte[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_byte[1] <= data_byte[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_byte[2] <= data_byte[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_byte[3] <= data_byte[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_byte[4] <= data_byte[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_byte[5] <= data_byte[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_byte[6] <= data_byte[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_byte[7] <= data_byte[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_tx_rx_top|uart_byte_tx:uart_byte_0
send_en => uart_state.OUTPUTSELECT
send_en => r_data_byte[7].ENA
send_en => r_data_byte[6].ENA
send_en => r_data_byte[5].ENA
send_en => r_data_byte[4].ENA
send_en => r_data_byte[3].ENA
send_en => r_data_byte[2].ENA
send_en => r_data_byte[1].ENA
send_en => r_data_byte[0].ENA
data_byte[0] => r_data_byte[0].DATAIN
data_byte[1] => r_data_byte[1].DATAIN
data_byte[2] => r_data_byte[2].DATAIN
data_byte[3] => r_data_byte[3].DATAIN
data_byte[4] => r_data_byte[4].DATAIN
data_byte[5] => r_data_byte[5].DATAIN
data_byte[6] => r_data_byte[6].DATAIN
data_byte[7] => r_data_byte[7].DATAIN
baud_set[0] => Decoder0.IN2
baud_set[0] => Decoder1.IN1
baud_set[1] => Decoder0.IN1
baud_set[2] => Decoder0.IN0
baud_set[2] => Decoder1.IN0
clk => rs232_tx~reg0.CLK
clk => r_data_byte[0].CLK
clk => r_data_byte[1].CLK
clk => r_data_byte[2].CLK
clk => r_data_byte[3].CLK
clk => r_data_byte[4].CLK
clk => r_data_byte[5].CLK
clk => r_data_byte[6].CLK
clk => r_data_byte[7].CLK
clk => uart_state~reg0.CLK
clk => tx_done~reg0.CLK
clk => bps_cnt[0].CLK
clk => bps_cnt[1].CLK
clk => bps_cnt[2].CLK
clk => bps_cnt[3].CLK
clk => bps_clk.CLK
clk => div_cnt[0].CLK
clk => div_cnt[1].CLK
clk => div_cnt[2].CLK
clk => div_cnt[3].CLK
clk => div_cnt[4].CLK
clk => div_cnt[5].CLK
clk => div_cnt[6].CLK
clk => div_cnt[7].CLK
clk => div_cnt[8].CLK
clk => div_cnt[9].CLK
clk => div_cnt[10].CLK
clk => div_cnt[11].CLK
clk => div_cnt[12].CLK
clk => div_cnt[13].CLK
clk => div_cnt[14].CLK
clk => div_cnt[15].CLK
clk => bps_DR[0].CLK
clk => bps_DR[1].CLK
clk => bps_DR[2].CLK
clk => bps_DR[3].CLK
clk => bps_DR[4].CLK
clk => bps_DR[5].CLK
clk => bps_DR[6].CLK
clk => bps_DR[7].CLK
clk => bps_DR[8].CLK
clk => bps_DR[9].CLK
clk => bps_DR[10].CLK
clk => bps_DR[11].CLK
clk => bps_DR[12].CLK
clk => bps_DR[13].CLK
clk => bps_DR[14].CLK
clk => bps_DR[15].CLK
rst_n => bps_DR[0].PRESET
rst_n => bps_DR[1].PRESET
rst_n => bps_DR[2].PRESET
rst_n => bps_DR[3].ACLR
rst_n => bps_DR[4].PRESET
rst_n => bps_DR[5].ACLR
rst_n => bps_DR[6].PRESET
rst_n => bps_DR[7].ACLR
rst_n => bps_DR[8].ACLR
rst_n => bps_DR[9].ACLR
rst_n => bps_DR[10].PRESET
rst_n => bps_DR[11].ACLR
rst_n => bps_DR[12].PRESET
rst_n => bps_DR[13].ACLR
rst_n => bps_DR[14].ACLR
rst_n => bps_DR[15].ACLR
rst_n => rs232_tx~reg0.PRESET
rst_n => tx_done~reg0.ACLR
rst_n => uart_state~reg0.ACLR
rst_n => div_cnt[0].ACLR
rst_n => div_cnt[1].ACLR
rst_n => div_cnt[2].ACLR
rst_n => div_cnt[3].ACLR
rst_n => div_cnt[4].ACLR
rst_n => div_cnt[5].ACLR
rst_n => div_cnt[6].ACLR
rst_n => div_cnt[7].ACLR
rst_n => div_cnt[8].ACLR
rst_n => div_cnt[9].ACLR
rst_n => div_cnt[10].ACLR
rst_n => div_cnt[11].ACLR
rst_n => div_cnt[12].ACLR
rst_n => div_cnt[13].ACLR
rst_n => div_cnt[14].ACLR
rst_n => div_cnt[15].ACLR
rst_n => bps_clk.ACLR
rst_n => bps_cnt[0].ACLR
rst_n => bps_cnt[1].ACLR
rst_n => bps_cnt[2].ACLR
rst_n => bps_cnt[3].ACLR
rst_n => r_data_byte[0].ACLR
rst_n => r_data_byte[1].ACLR
rst_n => r_data_byte[2].ACLR
rst_n => r_data_byte[3].ACLR
rst_n => r_data_byte[4].ACLR
rst_n => r_data_byte[5].ACLR
rst_n => r_data_byte[6].ACLR
rst_n => r_data_byte[7].ACLR
rs232_tx <= rs232_tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_state <= uart_state~reg0.DB_MAX_OUTPUT_PORT_TYPE


